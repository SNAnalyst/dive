(function(){var root=this;var dive,$self;if(typeof exports!=="undefined"){$self=dive=exports}else{$self=dive=root.dive||{}}$self.VERSION="0.1.0";$self.liquidSamples={fresh:{density:function(){return $self.density(1e3,1)}},salt:{density:function(){return $self.density(1030,1)}},mercury:{density:function(){return $self.density(13595.1,1)}}};$self.gravitySamples={earth:9.80665,_current:9.80665,current:function(_value){if(typeof _value=="number"){$self.gravitySamples._current=_value}return $self.gravitySamples._current}};$self.surfacePressureSamples={earth:1,_current:1,current:function(_value){if(typeof _value=="number"){$self.surfacePressureSamples._current=_value}return $self.surfacePressureSamples._current}};$self.constants={vapourPressure:{water:{tempRange_1_100:[8.07131,1730.63,233.426],tempRange_99_374:[8.14019,1810.94,244,485]},lungsBreathing:{_current:null,current:function(){if(!$self.constants.vapourPressure.lungsBreathing._current){var value=$self.waterVapourPressureInBars(35.2);$self.constants.vapourPressure.lungsBreathing._current=value}return $self.constants.vapourPressure.lungsBreathing._current}}},altitudePressure:{sealevel:1,_current:1,current:function(_value){if(typeof _value=="number"){$self.constants.altitudePressure._current=_value}return $self.constants.altitudePressure._current}}};$self.feetToMeters=function(feet){if(!feet)return.3048;return feet*.3048};$self.metersToFeet=function(meters){if(!meters)return 3.28084;return meters*3.28084};$self.mmHgToPascal=function(mmHg){if(!mmHg){mmHg=1}return $self.liquidSamples.mercury.density()/1e3*$self.gravitySamples.current()*mmHg};$self.pascalToBar=function(pascals){return pascals/($self.surfacePressureSamples.current()*1e5)};$self.barToPascal=function(bars){if(!bars){bars=1}return bars*$self.surfacePressureSamples.current()*1e5};$self.atmToBar=function(atm){var pascals=$self.atmToPascal(atm);return $self.pascalToBar(pascals)};$self.atmToPascal=function(atm){if(!atm){atm=1}return $self.surfacePressureSamples.current()*101325*atm};$self.pascalToAtm=function(pascal){return pascal/($self.surfacePressureSamples.current()*101325)};$self.density=function(weight,volume){return weight/volume};$self.depthInMetersToBars=function(depth,isFreshWater){var liquidDensity;if(isFreshWater){liquidDensity=$self.liquidSamples.fresh.density()}else{liquidDensity=$self.liquidSamples.salt.density()}var weightDensity=liquidDensity*$self.gravitySamples.current();return $self.pascalToBar(depth*weightDensity)+$self.constants.altitudePressure.current()};$self.depthInMetersToAtm=function(depth,isFreshWater){var liquidDensity;if(isFreshWater){liquidDensity=$self.liquidSamples.fresh.density()}else{liquidDensity=$self.liquidSamples.salt.density()}var weightDensity=liquidDensity*$self.gravitySamples.current();return $self.pascalToAtm(depth*weightDensity)+$self.constants.altitudePressure.current()};$self.barToDepthInMeters=function(bars,isFreshWater){var liquidDensity;if(isFreshWater){liquidDensity=$self.liquidSamples.fresh.density()}else{liquidDensity=$self.liquidSamples.salt.density()}if(!bars){bars=1}var weightDensity=liquidDensity*$self.gravitySamples.current();var pressure=$self.barToPascal(bars);return pressure/weightDensity};$self.atmToDepthInMeters=function(atm,isFreshWater){var liquidDensity;if(isFreshWater){liquidDensity=$self.liquidSamples.fresh.density()}else{liquidDensity=$self.liquidSamples.salt.density()}if(!atm){atm=1}var weightDensity=liquidDensity*$self.gravitySamples.current();var pressure=$self.atmToPascal(atm);return pressure/weightDensity};$self.dac=function(psiIn,psiOut,runTime){return(psiIn-psiOut)/runTime};$self.sac=function(dac,avgDepth,isFreshWater){var depthToOneATM=$self.atmToDepthInMeters(1,isFreshWater);return dac/(avgDepth/depthToOneATM+1)};$self.rmv=function(sac,tankVolume,workingTankPsi){var tankConversionFactor=tankVolume/workingTankPsi;return sac*tankConversionFactor};$self.partialPressure=function(absPressure,volumeFraction){return absPressure*volumeFraction};$self.partialPressureAtDepth=function(depth,volumeFraction,isFreshWater){var p=$self.depthInMetersToBars(depth,isFreshWater);return p*volumeFraction};$self.waterVapourPressure=function(degreesCelcius){var rangeConstants;if(degreesCelcius>=1&&degreesCelcius<=100)rangeConstants=$self.constants.vapourPressure.water.tempRange_1_100;else if(degreesCelcius>=99&&degreesCelcius<=374)rangeConstants=$self.constants.vapourPressure.water.tempRange_99_374;else return NaN;var logp=rangeConstants[0]-rangeConstants[1]/(rangeConstants[2]+degreesCelcius);return Math.pow(10,logp)};$self.waterVapourPressureInBars=function(degreesCelcius){var mmHg=$self.waterVapourPressure(degreesCelcius);var pascals=$self.mmHgToPascal(mmHg);return $self.pascalToBar(pascals)};$self.maxOperatingDepth=function(ppO2,fO2,isFreshWater){var meters=$self.barToDepthInMeters(1,isFreshWater);return meters*(ppO2/fO2-$self.constants.altitudePressure.current())};$self.equivNarcoticDepth=function(fO2,fN2,fHe,depth,isFreshWater){var ppO2=$self.partialPressureAtDepth(depth,fO2,isFreshWater);var ppN2=$self.partialPressureAtDepth(depth,fN2,isFreshWater);var ppHe=$self.partialPressureAtDepth(depth,fHe,isFreshWater);var narcIndex=ppO2+ppN2+ppHe*.23;var ppO2Air=$self.partialPressure(1,.2095);var ppN2Air=$self.partialPressure(1,.7808);var ppArAir=$self.partialPressure(1,.00934);var narcIndexAir=ppO2Air*1+ppN2Air*1+ppArAir*2.33;var relation=narcIndex/narcIndexAir;return(relation-$self.constants.altitudePressure.current())*$self.barToDepthInMeters(1,isFreshWater)};$self.instantaneousEquation=function(pBegin,pGas,time,halfTime){return pBegin+(pGas-pBegin)*(1-Math.pow(2,-time/halfTime))};$self.depthChangeInBarsPerMinute=function(beginDepth,endDepth,time,isFreshWater){var speed=(endDepth-beginDepth)/time;return $self.depthInMetersToBars(speed,isFreshWater)-$self.constants.altitudePressure.current()};$self.gasRateInBarsPerMinute=function(beginDepth,endDepth,time,fGas,isFreshWater){return Math.abs($self.depthChangeInBarsPerMinute(beginDepth,endDepth,time,isFreshWater))*fGas};$self.gasPressureBreathingInBars=function(depth,fGas,isFreshWater){var bars=$self.depthInMetersToBars(depth,isFreshWater);bars=bars-$self.constants.altitudePressure.current()-$self.constants.vapourPressure.lungsBreathing.current();return bars*fGas}}).call(this);